exit
c
co
exit
snake
step
steps
x
@x
x
self
step
@y
@x
self
direction
step
SNAKE_SIZE
SNKE_SIZE
@direction
step
@body_positions
@head_position
exit
@snake
snake
step
self
step
@head_position
@body_positions
step
break
exit
eixt
next
snake
@body_positions
body_positions
next
@body_positions
@head_position
next
@head_position
@body_positions
exit
@direction
exit
Position.new(0, 0)
exit
eixt
up_left
exit
bottom_right
up_left
exit
up_left
up_left.x
rand((up_left.x)..(bottom_right.x))
exit
[rand(window_size[X] / SNAKE_SIZE) * SNAKE_SIZE, rand(window_size[Y] / SNAKE_SIZE) * SNAKE_SIZE]
([rand(window_size[X] / SNAKE_SIZE), rand(window_size[Y] / SNAKE_SIZE)]) * [12]
([rand(window_size[X] / SNAKE_SIZE), rand(window_size[Y] / SNAKE_SIZE)]) * 12
([rand(window_size[X] / SNAKE_SIZE), rand(window_size[Y] / SNAKE_SIZE)])
[rand(window_size[X] / SNAKE_SIZE), rand(window_size[Y] / SNAKE_SIZE)] * 12
[rand(window_size[X] / SNAKE_SIZE), rand(window_size[Y] / SNAKE_SIZE)]
[rand(window_size[X] / SNAKE_SIZE), rand(window_size[Y] / SNAKE_SIZE)] * SNAKE_SIZE
SNAKE_SIZE
[rand(window_size[X] / SNAKE_SIZE), rand(window_size[Y] / SNAKE_SIZE)]
rand(window_size[X] / SNAKE_SIZE)
exit
Ã«xit
set_update_interval(160)
update_interval
update_interval (1)
update_interval ()
